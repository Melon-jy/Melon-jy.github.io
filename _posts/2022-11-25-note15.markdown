---
layout: post
title:  "HTTP와 웹 네트워크"
date:   2022-11-25 09:10:33 +0900
categories: jekyll update
---

# 네트워킹(NetWorking)

* connectionless - 비연결 -> 연결없이 데이터 전송 ex)편지, 방송
* subnet으로 date를 쏘면 subnet에 해당하는 모든 PC가 date를 얻을 수 있음
* TCP - 데이터 전송에 대한 신뢰
* UDP - 데이터 전송에 대한 신뢰가 없음 신뢰를 얻기 위해서는 별도의 처리가 필요함
* HTTP 1, 2version 까지는 TCP 였으나, HTTP3 이후는 UDP
* HTTP3 UDP 검색
* TCP는 Client와 Server가 3way handshake를 하는 확인 과정에서 시간이 발생하여 속도가 느림
* connection-Oritented - 연결 지향 -> 연결 후 통신 ex)전화
* Stateful - C와 S가 연결 후 계속해서 연결 요청 응답을 연결을 끊을때 까지 반복함 (다수의 Client에게 응대 불가 자원 낭비가 심함)
* stateless - 연결 요청 응답 후 연결 끊음 (많은 Client에 대응 가능)
* Stateful로 여러 Client에게 응대하기 위해 multi thread (멀티스레드)를 사용함 ssh, ftp, chatting, google meet(telnet+secure)
* HTTP5는 Stateless 방식으로 함

### HTTP

* Web Browser Header(요청에 대한 보충 정의) 요청헤더, 공통헤더, Entity header

```
Method ->      Get     <- request line 
URL      ->       /.../a.html
Protocol/version       ->      http/1.1
Header    ->    {Host: localhost:5500
user-agent : ....
...} => Message-body <-post method일때 보내는 데이터
response status-> HTTP/1.1 -> 200 ok 
```

* server header(응답에 대한 부연 설명) 응답헤더, 공통헤더, Entity header
* Message-body
```
{Content-length : ~(byte)
content-type : text/html; charset=UTF-8}
<!Doctype html>
<html>

</html>
```
* Protocols 주소

* https://www.w3.org/Protocols/rfc2616/rfc2616.html 

### Proxy서버

* Client와 server 중간에 통신을 중재함 
* Client -> proxy -> server 식으로 요청
* server -> proxy -> Client 식으로 응답
* proxy : cache(임시저장소)
* 응답 데이터를 보관
* 같은 자원을 요청할때 보관된 데이터를 즉시 전달
* Network Overhead를 줄인다
* 응답속도 개선됨
### 모니터링

* 모니터링 : 요청과 응답 내용 감시, 보안 강화
* HTTP 통신을 살펴볼 수 있다.

### charls proxy 

* URI : Unfiorm Resource Identifier = URL과 URN을 포함함
* URL : HTTP://서버:포트/0/0/0
* URN : 0 : 0 : 0
* form action에 method를 지정 하나 안하나 같으며 button은 form 안에 있어야함
* Post 요청은 method에 post를 요청하면 됨
* get 요청일때는 컨텐츠에 대한 부연 설명을 하지 않음
* post 요청일때는 컨텐츠 타입에 대한 부연 설명을 함

### Get 요청
* /html/form/exam02?name(파라미터명)=aaa(파라미터값)&(구분자)age=11 : 공백이 생겨선 안됨
* path(자원의 주소) query staring(서버에 보내는 데이터)
* 파라미터란 URL에서 ?이후에 발생하는 것
```
<form id="form1" action="/html/form/exam-02 name="aaa" age="11">
     이름: <input type="text" name="name"><br>
     나이: <input type="text" name="age"><br>
     <button>요청</button>
```
* 위와 같이 한 후 URL끝에 #form1을 입력시 해당 위치로 이동
* 여백의 공간이 있어야 이동이 가능함
* query staring 의 한계 : Binary data를 보낼 수 없다.
* Text는 일반 Text Editor로 편집할 수 있는 포맷이다.
* ex).txt, .rtf, .html, .css, .js, . xml, .json, properties, .java, .py 등등
* binary 형식 : byte단위로 포맷이 되어있고 일반txt editor로 편집 불가하며 전용 app를 사용해야 함
* ex) jpg, mp3 등의 파일을 txt로 열어 중간에 언어를 적게되면 형식이 깨져 열리지 않게 됨
* app의 예) primiere pro
* 데이터를 읽을땐 숫자인지 문자인지 명확하게 구분해야함
* 메모장으로 MP3데이터를 읽을 수 있다고 하여 MP3가 txt가 된 것은 아님
* binary의 종류)jpg, .gif, .png, .mp3, .mp4, .avi, .doc 등등
* ECMA에서 MS오피스와 star오피스 두 가지 다 국제 표준으로 정함
* ms오피스에서 지원하는 x가 붙은 것들은 txt파일
* 
* 
* 
* 
* 
* 
* 
* 
* 
* 
* 
* 




<br><br><br>

<div id="disqus_thread"></div>
<script>
    /**
    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */
    /*
    var disqus_config = function () {
    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() { // DON'T EDIT BELOW THIS LINE
    var d = document, s = d.createElement('script');
    s.src = 'https://melonweb.disqus.com/embed.js';
    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>